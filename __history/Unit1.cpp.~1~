//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop
#include "Unit1.h"
#include "sqlite3.h"
#include "string.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "VirtualTrees"
#pragma resource "*.dfm"
TForm1 *Form1;
sqlite3* Database;
int status;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
 void __fastcall TForm1::FormCreate(TObject *Sender)

{
sqlite3_open("rogova.db", &Database);
VirtualStringTree1->NodeDataSize=sizeof(TBaseNode);
}
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
void __fastcall TForm1::Button3Click(TObject *Sender)
{
char *errmsg;
sqlite3_stmt *pStatement;
int result = sqlite3_prepare_v2 (Database, "SELECT id, name, payment FROM payment",  -1, &pStatement,NULL);
while (true)
	{
	result = sqlite3_step (pStatement);
	if (result != SQLITE_ROW) break;
    int n = sqlite3_column_int(pStatement, 0);
	unsigned char *str = (unsigned char *)sqlite3_column_text(pStatement, 1);
	unsigned char *str1 = (unsigned char *)sqlite3_column_text(pStatement, 2);
	unsigned char *str2 = (unsigned char *)sqlite3_column_text(pStatement, 3);
	unsigned char *str3 = (unsigned char *)sqlite3_column_text(pStatement, 4);

	PVirtualNode entryNode = (PVirtualNode)VirtualStringTree1->AddChild(VirtualStringTree1->RootNode);
	TBaseNode *nodeData = (TBaseNode*)VirtualStringTree1->GetNodeData(entryNode);
	nodeData->index=n;
	nodeData->FirstName=(UnicodeString)(char*)str;
	nodeData->LastName=(UnicodeString)(char*)str1;
}
sqlite3_finalize(pStatement);
}

